//   font-family: "Poppins", sans-serif;
// font-family: "Open Sans", sans-serif;

.firstPage {
  width: 100vw;
  min-height: 150vh;
  background-color: #583d72;
  background: url(../../images/idk.svg);
  background-position: center center;
  background-size: cover;
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  position: relative;

  .content {
    display: flex;
    flex-direction: row;
    align-self: center;
    justify-self: center;
    justify-content: center;
    position: relative;
    width: 90vw;
    top: -20vh;

    .txt {
      width: 500px;
      display: flex;
      flex-direction: column;
      justify-content: space-around;
      align-items: center;

      h1 {
        text-indent: 20px;
        font-family: "Open Sans", sans-serif;
        line-height: 1.45;
        font-size: 40px;
        color: white;
      }
    }

    .image {
      margin: 20px;

      .logo {
        max-width: 500px;
        height: auto;
        box-shadow: 0 10px 30px black;
        border-radius: 100%;
        margin: 30px;
      }
    }
  }

  //   oleaka de easter egg
  // as fi vrut sa fi fost mort de beat acum, simcer
}

.avantaje {
  width: 100vw;
  min-height: 500px;
  display: flex;
  flex-direction: column;
  position: relative;

  //   daca vezi codul asta si in special comentariul asta, da mesaj pe fb la https://www.facebook.com/dragutu.matei/ ca ma plictisesc a lic si nu am ce face

  .h1 {
    margin: 30px 0;
    .linie {
      width: 250px;
      height: 4px;
      background: $lightpurple;
      margin: 10px auto;
      transform: skew(-30deg);
    }

    h1 {
      text-align: center;
      margin: 20px 0;
      font-size: 35px;
      z-index: 5;
      font-weight: 600;
      color: $lightred;
      font-family: "Open Sans", sans-serif;
    }
  }

  .lista {
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: flex-start;
    flex-wrap: wrap;
    width: 100vw;
    min-height: 500px;
    position: relative;

    .av {
      width: 320px;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-align: center;
      z-index: 3;
      margin: 30px;
      height: 450px;
      border-radius: 40px;
      box-shadow: 0 0px 6px #00000047;
      padding: 20px;

      img {
        width: 150px;
      }

      h3 {
        margin: 20px;
        font-size: 25px;
        font-weight: 700;
        font-family: "Poppins", sans-serif;
        color: $lightpurple;
      }

      P {
        color: rgb(27, 27, 27);
        font-size: 17px;
        font-family: "Open Sans", sans-serif;
        line-height: 1.2;
        font-weight: 400;
      }
    }
  }
}

.steps {
  margin: 150px 0;
  $width: 90vw;
  $steps: 4;

  $scheme-base: $darkpurple;
  $color-bg: $scheme-base;
  $color-mid: darken($scheme-base, 14);
  $color-dark: darken($scheme-base, 40);

  $step-width: 100% / $steps;
  $step-point-width: 30px;
  $step-point-height: $step-point-width;
  $step-point-color: $color-mid;
  $step-point-bg: white;
  $step-font-size: 14px;
  $step-padding: 10px;
  $step-gap: 50px;

  $tab-spacing: 80px;

  $form-width: 700;

  $counter-spacing: 3px;
  $counter-font-size: 12px;

  $bar-transition-speed: 800ms;
  $bar-bg: repeating-linear-gradient(
    45deg,
    #1ea4ec,
    #1ea4ec 4px,
    #1f8bc5 4px,
    #1f8bc5 10px
  );
  $bar-height: 6px;

  $status-width: 40px;

  $box-color: #986c5d;

  $box-color: repeating-linear-gradient(
    45deg,
    #986c5d,
    #986c5d 2px,
    #775144 2px,
    #775144 4px
  );

  $lid-color: #775144;
  $box-lid-offset: 4px;

  $box-item-color: #be69d2;
  $box-item-thickness: 4px;
  $box-item-width: $status-width - 20;
  $box-item-height: $box-item-width;

  $ribbon-color: #ee0f29;
  $ribbon-width: $status-width / 4;

  $bow-width: 6px;
  $bow-height: 10px;
  $bow-color: darken($ribbon-color, 10);

  @mixin move-item($item, $top, $left, $opacity) {
    & > .#{$item} {
      top: $top;
      left: $left;
      opacity: $opacity;
    }
  }

  %box-animation-5 {
    @include move-item("box_base", 50%, 0px, 1);
    @include move-item("box_item", -30px, 0px, 0);
  }

  %box-animation-4 {
    @extend %box-animation-5;
    @include move-item("box_lid", -20px, 0px, 0);
    @include move-item("box_item", -10px, 0px, 1);
  }

  %box-animation-3 {
    @extend %box-animation-5;
    @include move-item("box_item", 10px, 0px, 1);
    @include move-item("box_lid", -1px, 0px, 1);
    @include move-item("box_ribbon", 70%, 0px, 0);
    @include move-item("box_bow", 0px, 0px, 0);
  }

  %box-animation-2 {
    @extend %box-animation-5;
    @extend %box-animation-4;
    @extend %box-animation-3;

    @include move-item("box_ribbon", 50%, 0px, 1);
    @include move-item("box_bow", -10px, 0px, 1);
  }

  %box-animation-1 {
    @extend %box-animation-5;
    @extend %box-animation-4;
    @extend %box-animation-3;
    @extend %box-animation-2;

    @include move-item("box_tag", 10px, 20px, 1);
    @include move-item("box_string", 10px, 20px, 1);
  }

  @mixin traverse($n) {
    $step: "";
    $tab: "";

    @for $i from 1 through $n {
      $int: #{($n + 1) - $i};

      & #step-#{$int}:checked #{$step} + div {
        width: ($n - $i) * $step-width;
      }

      & #step-#{$int}:checked #{$step} + div + div + div {
        & > .tab:nth-of-type(#{$int}) {
          opacity: 1;
          top: 0;
        }
      }

      & #step-#{$int}:checked #{$step} + div + div + div + div {
        right: -($step-width / 2) + ($i * $step-width);
        @extend %box-animation-#{$i};
      }

      $step: $step + "+ input";
      $tab: $tab + "+ div";
    }
  }

  %center {
    position: absolute;
    left: 0;
    right: 0;
    top: 50%;
    transform: translateY(-50%);
    margin: auto;
  }

  %bar {
    height: $bar-height;
    left: $step-width / 2;
    background: $bar-bg;
    transition: width $bar-transition-speed
      cubic-bezier(0.915, 0.015, 0.3, 1.005);
    border-radius: $bar-height;
    width: 0;
    position: relative;
    z-index: -1;
  }

  %counter {
    @extend %center;
    width: $step-point-width;
    height: $step-point-height;
    color: $step-point-color;
    background: $step-point-bg;
    line-height: $step-point-height;
    border: $counter-spacing solid $color-bg;
    font-size: $counter-font-size;
    top: $bar-height / 2;
    border-radius: 100%;
    transition: all 0.4s;
    cursor: pointer;
    pointer-events: none;
  }

  %step {
    width: $step-width;
    font-size: $step-font-size;
    padding: 0 $step-padding;
    transition: all 0.4s;
    float: left;
    text-align: center;
    position: relative;

    label {
      padding-top: $step-gap;
      top: -20px;
      color: $lightpurple;
      display: block;
      position: relative;
      cursor: pointer;
    }

    &:before {
      @extend %counter;
    }

    &:hover {
      color: white;

      &:before {
        color: white;
        background: #1ea4ec;
      }
    }
  }

  .progress {
    position: relative;
    margin-top: 230px;
    align-self: flex-start;
    z-index: 4;
    align-self: center;

    @media screen and (max-width: 1100px) {
      align-self: center;
    }

    @media screen and (max-width: 600px) {
      margin-bottom: 120px;
    }

    &_inner {
      @include traverse($steps);
      @extend %center;
      position: relative;
      height: 200px;
      width: $width;
      max-width: 95vw;

      @for $i from 1 through $steps {
        &__step:nth-of-type(#{$i}) {
          &:before {
            content: "#{$i}";
          }
        }
      }

      &__step {
        @extend %step;
      }

      &__bar {
        @extend %bar;
        &--set {
          @extend %bar;
          width: 100% - $step-width;
          top: -$bar-height;
          background: $color-mid;
          position: relative;
          z-index: -2;
        }
      }

      &__tabs {
        width: $width;
        display: flex;
        flex-direction: row;
        justify-content: center;

        & .tab {
          opacity: 0;
          position: absolute;
          top: 40px;
          text-align: center;
          margin-top: $tab-spacing;
          box-shadow: 0px 0px 10px darken($color-bg, 10);
          padding: 30px;
          background: white;
          border-radius: 10px;
          transition: all 0.2s;

          h1 {
            margin: 5px;
            font-weight: 800;
            font-family: "Montserrat", sans-serif;
            position: relative;
            font-size: 35px;
            color: $darkpurple;
          }

          p {
            color: $darkpurple;
            margin-top: 20px;
            font-size: 20px;
            font-family: "Roboto", sans-serif;
            opacity: 0.8;
            position: relative;
            font-family: "Poppins", sans-serif;
            line-height: 1.3;
          }
        }
      }

      &__status {
        width: $status-width;
        height: $status-width;
        top: -$status-width * 2;
        transition: right $bar-transition-speed
          cubic-bezier(0.915, 0.015, 0.3, 1.005);
        transform: translateX(50%);
        position: absolute;

        %animatable {
          opacity: 0;
          transition: all 600ms cubic-bezier(0.915, 0.015, 0.3, 1.005);
          transition-delay: 300ms;
        }

        div {
          position: absolute;
          @extend %animatable;
        }

        & .box_base {
          @extend %center;
          background: $box-color;
          width: $status-width - $box-lid-offset;
          height: $status-width;
          z-index: 1;
          border-radius: 1px;
        }

        & .box_lid {
          width: $status-width;
          height: $status-width / 3;
          background: $lid-color;
          z-index: 2;
          border-radius: 1px;
          top: 0;
        }

        & .box_item {
          @extend %center;
          width: $box-item-width;
          height: $box-item-height;
          background: $box-item-color;
          z-index: 0;
          border-radius: 4px;
          transform: rotate(45deg);
        }

        & .box_ribbon {
          @extend %center;
          width: $ribbon-width;
          height: $status-width + 2;
          background: $ribbon-color;
          z-index: 4;
          border-radius: 1px;
        }

        %bow {
          width: $bow-width;
          height: $bow-height;
          background: $bow-color;
          position: absolute;
          z-index: 3;
          opacity: 1;
          border-radius: 1px;
        }

        & .box_bow {
          @extend %center;
          top: -$bow-width;
          z-index: 1;
          transition-delay: 500ms;
          &__left {
            @extend %bow;
            @extend %center;
            left: $bow-width;
            transform: rotate(45deg);
          }

          &__right {
            @extend %bow;
            @extend %center;
            left: -4px;
            transform: rotate(-45deg);
          }
        }

        // Refactor

        & .box_tag {
          @extend %center;
          width: 20px;
          height: 10px;
          background: #487ac7;
          z-index: 4;
          transform: rotate(-10deg) translateX(-40px) translateY(0px);
          border-radius: 2px;
          transition-delay: 500ms;
        }

        & .box_string {
          width: 17px;
          height: 2px;
          background: #343434;
          @extend %center;
          z-index: 4;
          transform: rotate(-39deg) translateX(-22px) translateY(-12px);
        }
      }

      input[type="radio"] {
        display: none;
      }
    }
  }
}
